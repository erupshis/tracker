name: migration-dry

on:
  workflow_call:
    inputs:
      DB_USER:
        required: true
        type: string
      DB_PASSWORD:
        required: true
        type: string
      DB_HOST:
        required: true
        type: string
      DB_PORT:
        required: true
        type: string
      DB_NAME:
        required: true
        type: string

jobs:
  check-migrations:
    name: "migration: dry"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker for PostgreSQL
        run: |
          docker run --name postgres-container -e POSTGRES_USER=${{ inputs.DB_USER }} -e POSTGRES_PASSWORD=${{ inputs.DB_PASSWORD }} -e POSTGRES_DB=${{ inputs.DB_NAME }} -p ${{ inputs.DB_PORT }}:5432 -d postgres:latest
          echo "PostgreSQL container started"

      - name: Wait for PostgreSQL to start
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until docker exec postgres-container pg_isready -U ${{ inputs.DB_USER }} -d ${{ inputs.DB_NAME }}; do
            echo "PostgreSQL is not ready, waiting..."
            sleep 5
          done
          echo "PostgreSQL is ready."

      - name: Install Goose
        run: |
          go install github.com/pressly/goose/v3/cmd/goose@latest
          echo "Goose installed successfully"
          echo "$HOME/go/bin" >> $GITHUB_PATH # Add Go binaries to PATH

      - name: Run Up Migrations
        run: |
          goose -dir ./migrations/ up
        env:
          GOOSE_DRIVER: "postgres"
          GOOSE_DBSTRING: "postgres://${{ inputs.DB_USER }}:${{ inputs.DB_PASSWORD }}@${{ inputs.DB_HOST }}:${{ inputs.DB_PORT }}/${{ inputs.DB_NAME }}?sslmode=disable"

      - name: Run Down Migrations
        run: |
          goose -v -dir ./migrations/ down
        env:
          GOOSE_DRIVER: "postgres"
          GOOSE_DBSTRING: "postgres://${{ inputs.DB_USER }}:${{ inputs.DB_PASSWORD }}@${{ inputs.DB_HOST }}:${{ inputs.DB_PORT }}/${{ inputs.DB_NAME }}?sslmode=disable"

      - name: Stop PostgreSQL Container
        run: |
          docker stop postgres-container
          docker rm postgres-container
        if: always()

      - name: Check Migration Status
        run: |
          echo "Dry run migration check completed."
